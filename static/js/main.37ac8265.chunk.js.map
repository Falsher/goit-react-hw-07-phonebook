{"version":3,"sources":["components/phonebook/container.js","redux/action.js","redux/operations.js","components/phonebook/phonebook.js","redux/selectors.js","components/phonebook/contacts.js","components/phonebook/filter.js","App.js","redux/reducer.js","redux/store.js","reportWebVitals.js","index.js"],"names":["Container","children","className","fetchSubmitRequest","createAction","fetchSubmitSuccess","fetchSubmitError","formSubmitRequest","formSubmitSuccess","formSubmitError","formDeleteRequest","formDeleteSuccess","formDeleteError","filterContacts","axios","defaults","baseURL","name","number","dispatch","contacts","post","then","data","catch","error","contactId","delete","a","get","connect","formSubmit","operations","useState","textName","setTextName","setNumber","reset","onSubmit","e","preventDefault","type","pattern","title","required","value","onChange","currentTarget","getFilter","state","filter","getVisibleContacts","createSelector","items","contact","toLowerCase","includes","ContactsData","selectors","onDeleteContact","id","map","onClick","events","target","fetchContacts","useEffect","createReducer","_state","payload","action","_","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","reducerContact","devTools","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37ac8265.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Container({ children }) {\r\n  return <div className=\"Container\">{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchSubmitRequest = createAction('contacts/fetchSubmitRequest');\nexport const fetchSubmitSuccess = createAction('contacts/fetchSubmitSuccess');\nexport const fetchSubmitError = createAction('contacts/fetchSubmitError');\n\nexport const formSubmitRequest = createAction('contacts/formSubmitRequest');\nexport const formSubmitSuccess = createAction('contacts/formSubmitSuccess');\nexport const formSubmitError = createAction('contacts/formSubmitError');\n\nexport const formDeleteRequest = createAction('contacts/formDeleteRequest');\nexport const formDeleteSuccess = createAction('contacts/formDeleteSuccess');\nexport const formDeleteError = createAction('contacts/formDeleteError');\n\nexport const deleteContacts = createAction('contacts/delete');\n\nexport const filterContacts = createAction('contacts/filter');\n","import axios from 'axios';\nimport {\n  formSubmitRequest,\n  formSubmitSuccess,\n  formSubmitError,\n  formDeleteRequest,\n  formDeleteSuccess,\n  formDeleteError,\n  fetchSubmitRequest,\n  fetchSubmitSuccess,\n  fetchSubmitError,\n} from './action';\naxios.defaults.baseURL = 'http://localhost:4040';\nconst fetchContacts = () => async dispatch => {\n  dispatch(fetchSubmitRequest());\n  const { data } = await axios.get('/contacts');\n  try {\n    dispatch(fetchSubmitSuccess(data));\n  } catch (error) {\n    dispatch(fetchSubmitError(error));\n  }\n};\n\nconst formSubmit = (name, number) => dispatch => {\n  const contacts = {\n    name,\n    number,\n  };\n  dispatch(formSubmitRequest());\n  axios\n    .post('/contacts', contacts)\n    .then(({ data }) => dispatch(formSubmitSuccess(data)))\n    .catch(error => dispatch(formSubmitError(error)));\n};\nconst deleteContacts = contactId => dispatch => {\n  dispatch(formDeleteRequest());\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(formDeleteSuccess(contactId)))\n    .catch(error => dispatch(formDeleteError(error)));\n};\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { formSubmit, deleteContacts, fetchContacts };\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport operations from '../../redux/operations';\n\nimport './css/phonebook.css';\nfunction Phonebook({ formSubmit }) {\n  const [textName, setTextName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const hadleInputChange = e => {\n    setTextName(e.currentTarget.value);\n  };\n  const hadleInputNumber = e => {\n    setNumber(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    formSubmit(textName, number);\n    reset();\n  };\n  const reset = () => {\n    setTextName('');\n    setNumber('');\n  };\n\n  return (\n    <form className=\"formFilling\" onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          className=\"inputContact\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={textName}\n          onChange={hadleInputChange}\n        />\n      </label>\n      <label>\n        Number phone\n        <input\n          className=\"inputContact\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={hadleInputNumber}\n        />\n      </label>\n\n      <button className=\"buttonAdd\" type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nconst mapDispatchtoProps = dispatch => ({\n  formSubmit: (name, number) => dispatch(operations.formSubmit(name, number)),\n});\nexport default connect(null, mapDispatchtoProps)(Phonebook);\n","import { createSelector } from '@reduxjs/toolkit';\nconst getFilter = state => state.contacts.filter;\nconst getAllContacts = state => state.contacts.items;\n\nconst getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  },\n);\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getFilter, getVisibleContacts };\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport operations from '../../redux/operations';\nimport selectors from '../../redux/selectors';\nimport './css/contacts.css';\n\nfunction Contacts({ ContactsData, onDeleteContact }) {\n  return (\n    <ul className=\"contacts\">\n      {ContactsData.map(({ name, number, id }) => (\n        <li className=\"contacts-items\" key={id}>\n          <span className=\"contacts-name\">{name}</span>\n          <span className=\"contacts-number\">{number}</span>\n          <button onClick={() => onDeleteContact(id)}>Delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nconst mapStateToProps = state => ({\n  ContactsData: selectors.getVisibleContacts(state),\n});\nconst mapDispatchtoProps = dispatch => ({\n  onDeleteContact: id => dispatch(operations.deleteContacts(id)),\n});\nexport default connect(mapStateToProps, mapDispatchtoProps)(Contacts);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { filterContacts } from '../../redux/action';\nimport selectors from '../../redux/selectors';\nimport './css/filter.css';\nfunction Filter({ value, onChange }) {\n  return (\n    <div className=\"filter\">\n      <label>\n        Find contacts by name\n        <input type=\"text\" value={value} onChange={onChange} />\n      </label>\n    </div>\n  );\n}\nconst mapStateToProps = state => ({\n  value: selectors.getFilter(state),\n});\nconst mapDispatchtoProps = dispatch => ({\n  onChange: events => dispatch(filterContacts(events.target.value)),\n});\nexport default connect(mapStateToProps, mapDispatchtoProps)(Filter);\n","import { useEffect } from 'react';\nimport Container from './components/phonebook/container';\nimport Phonebook from './components/phonebook/phonebook';\nimport Contacts from './components/phonebook/contacts';\nimport Filter from './components/phonebook/filter';\nimport './components/phonebook/css/contacts.css';\nimport { connect } from 'react-redux';\nimport operations from './redux/operations';\nfunction App({ fetchContacts }) {\n  useEffect(() => {\n    fetchContacts();\n  }, [fetchContacts]);\n  return (\n    <Container>\n      <Phonebook />\n      <div className=\"contactsDiv\">\n        <Contacts />\n      </div>\n      <Filter />\n    </Container>\n  );\n}\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(operations.fetchContacts()),\n});\nexport default connect(null, mapDispatchToProps)(App);\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport {\n  formSubmitRequest,\n  formSubmitSuccess,\n  formSubmitError,\n  filterContacts,\n  formDeleteRequest,\n  formDeleteSuccess,\n  formDeleteError,\n  fetchSubmitRequest,\n  fetchSubmitSuccess,\n  fetchSubmitError,\n} from './action';\n\nconst items = createReducer([], {\n  [fetchSubmitSuccess]: (_state, { payload }) => payload,\n  [formSubmitSuccess]: (state, { payload }) => [...state, payload],\n  [formDeleteSuccess]: (state, action) =>\n    state.filter(contact => contact.id !== action.payload),\n});\n\nconst filter = createReducer('', {\n  [filterContacts]: (_, action) => action.payload,\n});\nconst loading = createReducer(false, {\n  [formSubmitRequest]: () => true,\n  [formSubmitSuccess]: () => false,\n  [formSubmitError]: () => false,\n  [formDeleteRequest]: () => true,\n  [formDeleteSuccess]: () => false,\n  [formDeleteError]: () => false,\n  [fetchSubmitRequest]: () => true,\n  [fetchSubmitSuccess]: () => false,\n  [fetchSubmitError]: () => false,\n});\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport logger from 'redux-logger';\nimport reducerContact from './reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: { contacts: reducerContact },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}